Iterators are methods called on arrays to manipulate elements and
return values
---> The .forEach() Method
one way:
groceries.forEach(groceryItem => console.log(groceryItem));
another way: define the function first:
function printGrocery(element){
  console.log(element);
}

groceries.forEach(printGrocery);

---> The .map() method
	takes an argument of a callback function and returns a new
array.
--->The .filter method():
	returns an array after filtering.
	the callback function of the .filter() method should return
 true or false;
e.g.
const randomNumbers = [375, 200, 3.14, 7, 13, 852];

// Call .filter() on randomNumbers below
const smallNumbers = randomNumbers.filter(word =>{
  return word < 250;
});
--->the .findIndex() Method.
 returns the index of the first element that evaluates to true.
const jumbledNums = [123, 25, 78, 5, 9]; 

const lessThanTen = jumbledNums.findIndex(num => {
  return num < 10;
});

---> The .reduce() Method
 returns a single value after iterating through the elements of
an array.

--->.some()
 returns true if some elements of an array meet some condition

--->.every()
 returns true if every element of an array meet condition

summary
.forEach() is used to execute the same code on every element in an array but does not change the array and returns undefined.
.map() executes the same code on every element in an array and returns a new array with the updated elements.
.filter() checks every element in an array to see if it meets certain criteria and returns a new array with the elements that return truthy for the criteria.
.findIndex() returns the index of the first element of an array which satisfies a condition in the callback function. It returns -1 if none of the elements in the array satisfies the condition.
.reduce() iterates through an array and takes the values of the elements and returns a single value.
All iterator methods takes a callback function that can be pre-defined, or a function expression, or an arrow function.
You can visit the Mozilla Developer Network to learn more about iterator methods (and all other parts of JavaScript!).