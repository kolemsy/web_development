---> fetch() GET Requests 
The first type of requests are GET requests using fetch()
The fetch() function:

Creates a request object that contains relevant information that 
an API needs.
Sends that request object to the API endpoint provided.
Returns a promise that ultimately resolves to a response object, 
which contains the status of the promise with information the API
sent back.

fetch('https://api-to-call.com/endpoint').then(response =>{
  if(response.ok){
    return response.json();
  }
  throw new Error('Request failed!');
},networkError =>{
  console.log(networkError.message);
}).then(jsonResponse =>{
  return jsonResponse
});

fetch() POST Requests

fetch('https://api-to-call.com/endpoint',{
  method: 'POST',
  body: JSON.stringify({id:'200'})
}).then(response =>{
  if(response.ok){
    return response.json();
  }
  throw new Error('Request failed!');
}, networkError =>{
  console.log(networkError.message);
}).then(jsonResponse =>{
  return jsonResponse;
});

example:
// AJAX functions
const shortenUrl = () => {
  const urlToShorten = inputField.value;
  const data = JSON.stringify({destination: urlToShorten});
  fetch(url,{
    method: 'POST',
    headers: {
    'Content-type': 'application/json',
    'apikey': apiKey
},
    body: data 
  }).then(response =>{
    if(response.ok){
      return response.json();
    }
    throw new Error('Request failed!');
  },networkError =>{
    console.log(networkError.message);
  }).then(jsonResponse =>{
    renderResponse(jsonResponse);
  });
}